{"version":3,"sources":["components/common/FormsControl/FormsControl.module.css","components/common/FormsControl/FormsControls.js","utils/validators/validators.js","components/Login/Login.jsx"],"names":["module","exports","FormControl","meta","touched","error","children","hasError","className","Style","formControl","Textarea","props","input","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","requiredField","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","handleSubmit","captchaUrl","onSubmit","type","src","formSummaryError","connect","state","auth","isAuth","login","to","formData","email","password","rememberMe","captcha"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,eAAe,mCAAmC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,oMCG9JC,EAAc,SAAC,GAAwC,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SAC3CC,EAAWH,GAAWC,EAC5B,OACI,sBAAKG,UAAWC,IAAMC,YAAc,KAAOH,EAAWE,IAAMJ,MAAQ,IAApE,UACI,8BACKC,IAEJC,GAAY,+BAAOF,QAKnBM,EAAW,SAACC,GAAW,IACzBC,EAAoCD,EAApCC,MAAuBC,GAAaF,EAA7BT,KAA6BS,EAAvBG,MADW,YACYH,EADZ,2BAE/B,OAAO,cAACV,EAAD,2BAAiBU,GAAjB,aAAwB,oDAAcC,GAAWC,QAG/CE,EAAQ,SAACJ,GAAW,IACtBC,EAAoCD,EAApCC,MAAuBC,GAAaF,EAA7BT,KAA6BS,EAAvBG,MADQ,YACeH,EADf,2BAE5B,OAAO,cAACV,EAAD,2BAAiBU,GAAjB,aAAwB,iDAAWC,GAAWC,QAG5CG,EAAc,SAACC,EAAaC,EAAMC,EAAWC,GAA/B,IAA0CT,EAA1C,uDAAkD,GAAIU,EAAtD,uDAA6D,GAA7D,OACvB,gCACI,cAAC,IAAD,aAAOJ,YAAaA,EACbC,KAAMA,EACNI,SAAUH,EACVC,UAAWA,GACPT,IALf,IAMQU,O,iCCjCZ,oEAAO,IAAME,EAAgB,SAAAC,GACzB,IAAIA,EACJ,MAAO,sBAGEC,EAAmB,SAACC,GAAD,OAAe,SAAAF,GAC3C,GAAIA,GAASA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,8HCqBrCE,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EAlBL,SAAC,GAAuC,IAAtCE,EAAqC,EAArCA,aAAc3B,EAAuB,EAAvBA,MAAO4B,EAAgB,EAAhBA,WACrC,OACI,uBAAMC,SAAUF,EAAhB,UACKf,YAAY,QAAS,QAAS,CAACO,KAAgBR,KAC/CC,YAAY,WAAY,WAAY,CAACO,KAAgBR,IAAO,CAACmB,KAAM,aACnElB,YAAY,KAAM,aAAc,GAAID,IAAO,CAACmB,KAAM,YAAa,eAE/DF,GAAc,qBAAKG,IAAKH,IACxBA,GAAchB,YAAY,qBAAsB,UAAW,CAACO,KAAgBR,IAAO,IAEnFX,GAAS,qBAAKG,UAAWC,IAAM4B,iBAAtB,SAAyChC,IACnD,8BACI,mDA6BDiC,uBALS,SAACC,GAAD,MAAY,CAChCN,WAAYM,EAAMC,KAAKP,WACvBQ,OAAQF,EAAMC,KAAKC,UAGiB,CAACC,WAA1BJ,EArBD,SAAC1B,GAKX,OAAIA,EAAM6B,OACC,cAAC,IAAD,CAAUE,GAAI,aAIrB,gCACI,wCACA,cAACd,EAAD,CAAgBK,SAXP,SAACU,GACdhC,EAAM8B,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,UAUrCf,WAAYrB,EAAMqB","file":"static/js/7.e951072a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormsControl_form-control__e61Il\",\"formControl\":\"FormsControl_formControl__2OOsg\",\"error\":\"FormsControl_error__2e6nv\",\"formSummaryError\":\"FormsControl_formSummaryError__2j-6r\"};","import React from \"react\";\r\nimport Style from \"./FormsControl.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={Style.formControl + \" \" + (hasError ? Style.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators,component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","export const requiredField = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required!\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControl/FormsControls\";\r\nimport {requiredField} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Style from \"./../common/FormsControl/FormsControl.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [requiredField], Input)}\r\n            {createField(\"Password\", \"password\", [requiredField], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {captchaUrl && <img src={captchaUrl} />}\r\n            {captchaUrl && createField(\"Symbols from image\", \"captcha\", [requiredField], Input, {})}\r\n\r\n            {error && <div className={Style.formSummaryError}>{error}</div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: \"Login\"})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>LOGIN!</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n        </div>);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}