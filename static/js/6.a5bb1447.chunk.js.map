{"version":3,"sources":["components/common/FormsControl/FormsControl.module.css","components/common/FormsControl/FormsControls.js","utils/validators/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormControl","meta","touched","error","children","hasError","className","Style","formControl","Textarea","props","input","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","requiredField","value","maxLengthCreator","maxLength","length","DialogItem","path","id","dialog","active","to","src","img","alt","Message","message","maxLength100","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","state","dialogsPage","dialogElements","map","d","messageElements","Messages","m","dialogs","dialogs__items","messages","formData","console","log","addMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,eAAe,mCAAmC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,oMCG9JC,EAAc,SAAC,GAAwC,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SAC3CC,EAAWH,GAAWC,EAC5B,OACI,sBAAKG,UAAWC,IAAMC,YAAc,KAAOH,EAAWE,IAAMJ,MAAQ,IAApE,UACI,8BACKC,IAEJC,GAAY,+BAAOF,QAKnBM,EAAW,SAACC,GAAW,IACzBC,EAAoCD,EAApCC,MAAuBC,GAAaF,EAA7BT,KAA6BS,EAAvBG,MADW,YACYH,EADZ,2BAE/B,OAAO,cAACV,EAAD,2BAAiBU,GAAjB,aAAwB,oDAAcC,GAAWC,QAG/CE,EAAQ,SAACJ,GAAW,IACtBC,EAAoCD,EAApCC,MAAuBC,GAAaF,EAA7BT,KAA6BS,EAAvBG,MADQ,YACeH,EADf,2BAE5B,OAAO,cAACV,EAAD,2BAAiBU,GAAjB,aAAwB,iDAAWC,GAAWC,QAG5CG,EAAc,SAACC,EAAaC,EAAMC,EAAWC,GAA/B,IAA0CT,EAA1C,uDAAkD,GAAIU,EAAtD,uDAA6D,GAA7D,OACvB,gCACI,cAAC,IAAD,aAAOJ,YAAaA,EACbC,KAAMA,EACNI,SAAUH,EACVC,UAAWA,GACPT,IALf,IAMQU,O,iCCjCZ,oEAAO,IAAME,EAAgB,SAAAC,GACzB,IAAIA,EACJ,MAAO,sBAGEC,EAAmB,SAACC,GAAD,OAAe,SAAAF,GAC3C,GAAIA,GAASA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCL3C3B,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,OAAS,wBAAwB,OAAS,wBAAwB,QAAU,yBAAyB,SAAW,4B,6FCavM4B,MAVf,SAAoBjB,GACnB,IAAIkB,EAAO,YAAclB,EAAMmB,GAC/B,OACC,qBAAKvB,UAAWC,IAAMuB,OAAS,IAAMvB,IAAMwB,OAA3C,SAEC,eAAC,IAAD,CAASC,GAAIJ,EAAb,UAAmB,qBAAKK,IAAKvB,EAAMwB,IAAKC,IAAI,sBAAuBzB,EAAMO,WCA7DmB,MANf,SAAiB1B,GAChB,OACC,qBAAKJ,UAAWC,IAAM8B,QAAtB,SAAgC3B,EAAM2B,W,oCC8BxC,IAAMC,EAAed,YAAiB,KAgBhCe,EAAsBC,YAAU,CAACC,KAAM,kBAAjBD,EAdL,SAAC9B,GACpB,OACI,uBAAMgC,SAAUhC,EAAMiC,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOzB,UAAWV,IAAUQ,KAAM,iBAAkBD,YAAa,yBAC1DK,SAAU,CAACiB,OAEtB,8BACI,yDAQDO,EA7Cf,SAAiBnC,GACb,IAAIoC,EAAQpC,EAAMqC,YACdC,EAAiBF,EAAMD,QAAQI,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAuBjC,KAAMiC,EAAEjC,KAAMY,GAAIqB,EAAErB,GAAIK,IAAKgB,EAAEhB,KAArCgB,EAAErB,OAC3DsB,EAAkBL,EAAMM,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAyBhB,QAASgB,EAAEhB,SAAtBgB,EAAEhB,YAO9D,OACI,sBAAK/B,UAAWC,IAAM+C,QAAtB,UACI,qBAAKhD,UAAWC,IAAMgD,eAAtB,SACKP,IAEL,sBAAK1C,UAAWC,IAAMiD,SAAtB,UACR,8BACEL,IAEU,8BACX,cAACZ,EAAD,CAAqBG,SAfE,SAACe,GACxBC,QAAQC,IAAIF,GACf/C,EAAMkD,WAAWH,EAASI,4B,8DCXxBC,EAA6B,SAAChB,GAAD,MAAY,CACzCiB,OAAQjB,EAAMkB,KAAKD,S,QCgBRE,sBACdC,aAfqB,SAACpB,GACtB,MAAO,CACNC,YAAaD,EAAMC,gBAII,SAACoB,GACzB,MAAO,CACNP,WAAY,SAACC,GACZM,EAASC,YAAwBP,UDRJ,SAACQ,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAK7D,MAAMqD,OACT,cAACM,EAAD,eAAeE,KAAK7D,QADI,cAAC,IAAD,CAAUsB,GAAI,eAHV,GACXwC,IAAMH,WAQtC,OAFqCH,YAAQJ,EAARI,CAAoCI,KCM9DL,CAGbpB","file":"static/js/6.a5bb1447.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormsControl_form-control__e61Il\",\"formControl\":\"FormsControl_formControl__2OOsg\",\"error\":\"FormsControl_error__2e6nv\",\"formSummaryError\":\"FormsControl_formSummaryError__2j-6r\"};","import React from \"react\";\r\nimport Style from \"./FormsControl.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={Style.formControl + \" \" + (hasError ? Style.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators,component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","export const requiredField = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required!\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1N20F\",\"dialogs__items\":\"Dialogs_dialogs__items__3kzqO\",\"active\":\"Dialogs_active__3ak8K\",\"dialog\":\"Dialogs_dialog__2hsDK\",\"message\":\"Dialogs_message__3GTI-\",\"messages\":\"Dialogs_messages__1Mdqc\"};","import React from 'react';\r\nimport Style from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction DialogItem(props) {\r\n\tlet path = \"/dialogs/\" + props.id;\r\n\treturn (\r\n\t\t<div className={Style.dialog + ' ' + Style.active}>\r\n\r\n\t\t\t<NavLink to={path}><img src={props.img} alt=\"placeholder+image\" />{props.name}</NavLink>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport Style from './../Dialogs.module.css';\r\n\r\nfunction Message(props) {\r\n\treturn (\r\n\t\t<div className={Style.message}>{props.message}</div>\r\n\t)\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport Style from './Dialogs.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControl/FormsControls\";\r\nimport {maxLengthCreator} from \"../../utils/validators/validators\";\r\n\r\nfunction Dialogs(props) {\r\n    let state = props.dialogsPage;\r\n    let dialogElements = state.Dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id} img={d.img}/>);\r\n    let messageElements = state.Messages.map(m => <Message key={m.message} message={m.message}/>);\r\n\r\n    const onSubmitMessage = (formData) => {\r\n    \tconsole.log(formData);\r\n\t\tprops.addMessage(formData.newMessageBody);\r\n\t}\r\n\r\n    return (\r\n        <div className={Style.dialogs}>\r\n            <div className={Style.dialogs__items}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={Style.messages}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{messageElements}\r\n\t\t\t\t</div>\r\n                <div>\r\n\t\t\t\t\t<AddMessageReduxForm onSubmit={onSubmitMessage} />\r\n\t\t\t\t</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newMessageBody\"} placeholder={\"Enter your new message\"}\r\n                       validate={[maxLength100]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add Message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: \"addMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport Dialogs from './Dialogs';\r\nimport {addMessageActionCreator} from '../../redux/dialogs-reducer.js';\r\nimport {connect} from 'react-redux';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddMessage: (newMessageBody) => {\r\n\t\t\tdispatch(addMessageActionCreator(newMessageBody));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}