{"version":3,"sources":["components/common/FormsControl/FormsControl.module.css","components/common/FormsControl/FormsControls.js","utils/validators/validators.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","FormControl","meta","touched","error","children","hasError","className","Style","formControl","Textarea","props","input","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","requiredField","value","maxLengthCreator","maxLength","length","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","Post","item","src","alt","message","like","MyPosts","React","memo","postElemets","PostData","map","p","posts__block","AddNewReduxPostForm","onSubmit","formData","addPost","newPostBody","posts","maxLength10","reduxForm","form","handleSubmit","Field","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateUserStatus","ProfileInfo","profile","description__block","photos","large","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","getUserProfile","getUserStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.07c7cedd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormsControl_form-control__e61Il\",\"formControl\":\"FormsControl_formControl__2OOsg\",\"error\":\"FormsControl_error__2e6nv\",\"formSummaryError\":\"FormsControl_formSummaryError__2j-6r\"};","import React from \"react\";\r\nimport Style from \"./FormsControl.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={Style.formControl + \" \" + (hasError ? Style.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators,component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","export const requiredField = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required!\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description__block\":\"ProfileInfo_description__block__m1VXJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts__block\":\"MyPosts_posts__block__tjSb-\",\"posts\":\"MyPosts_posts__1kVIr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3CJVj\"};","import React from 'react';\r\nimport Style from './Post.module.css';\r\n\r\nfunction Post(props) {\r\n\treturn (\r\n\t\t<div className = {Style.item}>\r\n\t\t\t<img src=\"http://dummyimage.com/800x600/4d494d/686a82.gif&text=placeholder+image\" alt=\"placeholder+image\" />\r\n\t\t\t{props.message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>{props.like} likes</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Style from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControl/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postElemets = props.PostData.map(p => <Post message={p.message} like={p.like}/>);\r\n\r\n    const addNewPost = (formData) => {\r\n        props.addPost(formData.newPostBody);\r\n    }\r\n\r\n    return (\r\n        <div className={Style.posts__block}>\r\n            <h3>My Posts</h3>\r\n            <AddNewReduxPostForm onSubmit={addNewPost}/>\r\n            <div className={Style.posts}>\r\n                {postElemets}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newPostBody\"} placeholder={\"What's news?\"}\r\n                       validate={[requiredField, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewReduxPostForm = reduxForm({form: \"AddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from '../../../redux/profile-reducer.js';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tPostData: state.profilePage.PostData\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: (newPostBody) => {\r\n\t\t\tdispatch(addPostActionCreator(newPostBody));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateUserStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"Enter status\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import Style from \"./ProfileInfo.module.css\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n       setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode} >{props.status || \"Enter status\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Style from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nfunction ProfileInfo({profile, status, updateUserStatus}) {\r\n\tif (!profile) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\tMain Content\r\n\t\t\t</div>\r\n\t\t\t<div className={Style.description__block}>\r\n\t\t\t\t<img src={profile.photos.large} />\r\n\t\t\t\t<ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport Style from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nfunction Profile(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n\t\t\t<MyPostsContainer />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}